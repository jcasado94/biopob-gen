}
}
contingency.expected
contingency.expected <- data.frame(
matrix(nrow = 2, ncol = 3)
); colnames(contingency.expected) = c("fisica", "quimica", "mates"); rownames(contingency.expected) = c("aprovats", "suspesos")
contingency.expected
for (i in contingency.expected) {
print(i)
}
print(i, j)
print(i)
or (i in contingency.expected) {
for (i in contingency.expected) {
print(i)
}
source("~/.active-rstudio-document", echo=TRUE)
for (i in contingency.expected) {
print(i)
}
contingency.expected <- data.frame(
matrix(nrow = 2, ncol = 3)
); colnames(contingency.expected) = c("fisica", "quimica", "mates"); rownames(contingency.expected) = c("aprovats", "suspesos")
contingency.expected
for (i in contingency.expected) {
print(i)
}
contingency.observed[0]
contingency.observed[1]
contingency.observed[2]
contingency.observed[3]
for (i in contingency.observed) {
print(i)
}
for (a,i in contingency.observed) {
for (i,j in contingency.observed) {
View(contingency.observed)
for (i in 1:3) {
print(i)
}
for (i in 1:3) {
contingency.observed[i]
for (j in 1:2) {
contingency.observed[i][j]
#contingency.expected[i][j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
for (i in 1:3) {
contingency.observed[i]
for (j in 1:2) {
print(contingency.observed[i][j])
#contingency.expected[i][j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
contingency.observed[1][1]
contingency.observed[1,1]
for (i in 1:3) {
contingency.observed[i]
for (j in 1:2) {
print(contingency.observed[i,j])
#contingency.expected[i][j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
for (i in 1:3) {
contingency.observed[i]
for (j in 1:2) {
print(contingency.observed[j,i])
#contingency.expected[i][j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
for (i in 1:2) {
contingency.observed[i]
for (j in 1:3) {
print(contingency.observed[i,j])
#contingency.expected[i][j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
for (i in 1:2) {
for (j in 1:3) {
print(contingency.observed[i,j])
#contingency.expected[i][j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
for (i in 1:2) {
for (j in 1:3) {
print(contingency.observed[i,j])
contingency.expected[i,j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
}
}
contingency.expected
contingency.expected
contingency.expected[i,j] = sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
chi.statistic <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
contingency.expected[i,j] = expected
chi.statistic += (contingency.observed[i,j] - expected)^2/expected
chi.statistic <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
contingency.expected[i,j] = expected
chi.statistic =+ (contingency.observed[i,j] - expected)^2/expected
}
}
chi.statistic
contingency.expected
chi.statistic
help("chisq.test")
chisq.test(contingency.observed)
chisq.test(contingency.expected)
observed
chisq.test(contingency.observed)
2^3/3
8/3
a <- 2
a =+ 2
a
chi.statistic <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
contingency.expected[i,j] <- expected
chi.statistic <- chi.statistic + (contingency.observed[i,j] - expected)^2/expected
}
}
contingency.expected
chi.statistic
sum(contingency.observed)
chi.statistic <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
contingency.expected[i,j] <- expected
chi.statistic <- chi.statistic + (contingency.observed[i,j] - expected)^2/expected
}
}
contingency.expected
chi.statistic
# problema 1: taula de contingencia amb aprovats i suspesos
contingency.observed <- data.frame(
"fisica" = c(50, 5),
"quimica" = c(47, 14),
"mates" = c(56, 8),
row.names = c("aprovats", "suspesos"))
contingency.observed
contingency.expected <- data.frame(
matrix(nrow = 2, ncol = 3)
); colnames(contingency.expected) = c("fisica", "quimica", "mates"); rownames(contingency.expected) = c("aprovats", "suspesos")
contingency.expected
chi.statistic <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
contingency.expected[i,j] <- expected
chi.statistic <- chi.statistic + (contingency.observed[i,j] - expected)^2/expected
}
}
contingency.expected
chi.statistic
chisq.test(contingency.observed)
ma <- c(596,
576,
588,
578,
580,
592,
594,
579,
592,
574)
mb <- c(592,
608,
600,
590,
611,
605,
613,
616,
619,
622)
mc <- c(588,
618,
608,
597,
603,
602,
595,
588,
604,
608)
ma
m <- data.frame(ma, mb, mc)
m
t <- read.table("weight group
19   4.32  trt1
18   4.89  trt1
29   5.80  trt2
24   5.50  trt2
17   6.03  trt1
1    4.17  ctrl
6    4.61  ctrl
16   3.83  trt1
12   4.17  trt1
15   5.87  trt1")
1:10
rep(1,2)
c(rep(1,2), rep(2,2))
n <- data.frame(
"ascorbic" = c(596,576,588,578,580,592,594,579,592,574,592,608,600,590,611,605,613,616,619,622,588,618,608,597,603,602,595,588,604,608),
"marca" = c(rep(1,10), rep(2,10), rep(3,10))
)
n
n <- data.frame(
"ascorbic" = c(ma, mb, mc),
"marca" = c(rep(1,10), rep(2,10), rep(3,10))
)
n
m <- data.frame(
"ascorbic" = c(ma, mb, mc),
"marca" = c(rep(1,10), rep(2,10), rep(3,10))
)
m
res.aov <- aov(ascorbic ~ marca, data = m)
res.aov
summary(res.aov)
m
summary(res.aov)
help("aov")
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j]-mitjana)^2
}
}
sqt <- 0
mitjana <- avg(m$ascorbic)
avg <- mean(m$ascorbic)
sqt <- 0
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j]-mitjana)^2
}
}
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j] - avg)^2
}
}
sqt
sqt <- 0.0
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j] - avg)^2
}
}
sqt
sqt <- 0
sqt
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j] - avg)^2
}
}
sqt
avg <- mean(m$ascorbic)
sqt <- 0
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j] - avg)^2
print(sqt)
}
}
avg <- mean(m$ascorbic)
sqt <- 0.0
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j] - avg)^2
print(sqt)
}
}
avg <- mean(m$ascorbic)
sqt <- 0.0
print(sqt)
for (i in 1:10) {
for (j in 1:3) {
sqt <- sqt + (m[i,j] - avg)^2
print(sqt)
}
}
avg
avg <- mean(m$ascorbic)
sqt <- 0.0
for (i in 1:10) {
for (j in 1:3) {
print((m[i,j] - avg)^2)
sqt <- sqt + (m[i,j] - avg)^2
print(sqt)
}
}
avg <- mean(m$ascorbic)
sqt <- 0.0
for (i in 1:10) {
for (j in 1:3) {
print(m[i,j])
print((m[i,j] - avg)^2)
sqt <- sqt + (m[i,j] - avg)^2
}
}
m
avg <- mean(m$ascorbic)
sqt <- 0.0
for (i in 1:30) {
sqt <- sqt + (m$ascorbic[i] - avg)^2
}
sqt
contingency.observed <- data.frame(
"fisica" = c(50, 5),
"quimica" = c(47, 14),
"mates" = c(56, 8),
row.names = c("aprovats", "suspesos"))
contingency.observed
contingency.expected <- data.frame(
matrix(nrow = 2, ncol = 3)
); colnames(contingency.expected) = c("fisica", "quimica", "mates"); rownames(contingency.expected) = c("aprovats", "suspesos")
contingency.expected
chi.statistic <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- sum(contingency.observed[i])*sum(contingency.observed[j])/sum(contingency.observed)
contingency.expected[i,j] <- expected
chi.statistic <- chi.statistic + (contingency.observed[i,j] - expected)^2/expected
}
}
contingency.expected
chi.statistic
chisq.test(contingency.observed)
ma <- c(596,576,588,578,580,592,594,579,592,574)
mb <- c(592,608,600,590,611,605,613,616,619,622)
mc <- c(588,618,608,597,603,602,595,588,604,608)
m <- data.frame(
"ascorbic" = c(ma, mb, mc),
"marca" = c(rep(1,10), rep(2,10), rep(3,10))
)
res.aov <- aov(ascorbic ~ marca, data = m)
summary(res.aov)
m
help(LSD.test)
??LSD.test
ma <- c(596,576,588,578,580,592,594,579,592,574)
mb <- c(592,608,600,590,611,605,613,616,619,622)
mc <- c(588,618,608,597,603,602,595,588,604,608)
m <- data.frame(
"ascorbic" = c(ma, mb, mc),
"marca" = c(rep('a',10), rep('b',10), rep('c',10))
)
m
res.aov <- aov(ascorbic ~ marca, data = m)
summary(res.aov)
library(agricolae)
install(agricolae)
install.packages("agricolae")
library(agricolae)
ma <- c(596,576,588,578,580,592,594,579,592,574)
mb <- c(592,608,600,590,611,605,613,616,619,622)
mc <- c(588,618,608,597,603,602,595,588,604,608)
m <- data.frame(
"ascorbic" = c(ma, mb, mc),
"marca" = c(rep('a',10), rep('b',10), rep('c',10))
)
res.aov <- aov(ascorbic ~ marca, data = m)
summary(res.aov)
lsd <- LSD.test(res.aov, "marca")
lsd
summary(lsd)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
fisica <- c(1,2,2,3,2)
quimica <- c(2,3,3,4,3)
biologia <- c(3,2,4,2,4)
df <- data.frame(rep("fisica", 5), fisica,
rep("quimica", 5), quimica,
rep("biologia", 5), biologia)
df
df <- data.frame("assignatura" = rep("fisica", 5), rep("quimica", 5), rep("biologia", 5),
fisica,
quimica,
biologia)
library(dplyr)
df <- data.frame("assignatura" = c(rep("fisica", 5), rep("quimica", 5), rep("biologia", 5)),
"valoracio" = c(fisica, quimica, biologia))
df
kruskal <- kruskal.test(valoracio ~ assignatura, data = df)
kruskal
summary(kruskal)
kruskal
l1 <- c(198,186,201,190)
l2 <- c(200,203,205,187)
l3 <- c(215,187,212,190)
m <- data.frame(
"pes" = c(l1, l2, l3),
"localitat" = c(rep('l1',10), rep('l2',10), rep('l3',10))
)
l1 <- c(198,186,201,190)
l2 <- c(200,203,205,187)
l3 <- c(215,187,212,190)
m <- data.frame(
"pes" = c(l1, l2, l3),
"localitat" = c(rep('l1',4), rep('l2',4), rep('l3',4))
)
model <- aov(pes ~ localitat, data = data)
model <- aov(pes ~ localitat, data = m)
summary(model)
help(ScheffeTest)
install.packages("DescTools")
l1 <- c(198,186,201,190)
l2 <- c(200,203,205,187)
l3 <- c(215,187,212,190)
m <- data.frame(
"pes" = c(l1, l2, l3),
"localitat" = c(rep('l1',4), rep('l2',4), rep('l3',4))
)
boxplot(pes ~ localitat, data = m, xlab = "Localitat", ylab = "Pes")
model <- aov(pes ~ localitat, data = m)
summary(model)
df <- data.frame()
a <- c(7.29, 7.2, 7.15, 7.23, 7.5, 7.2)
b <- c(7.26, 7.16, 7.08, 7.11, 7.16, 6.89)
c <- c(7.18, 7.13, 6.99, 7.03, 7.11, 6.9)
m <- data.frame(
"ph" = c(a, b, c),
"marca" = rep(c(1,2,3,4,5,6),3)
)
m
m <- data.frame(
"ph" = c(a, b, c),
"regim" = c(rep("a", 6), rep("b", 6), rep("c", 6))
"individu" = rep(c(1,2,3,4,5,6),3)
m <- data.frame(
"ph" = c(a, b, c),
"regim" = c(rep("a", 6), rep("b", 6), rep("c", 6)),
"individu" = rep(c(1,2,3,4,5,6),3)
)
m
res.aov2 <- aov(ph ~ regim + individu, data = m)
summary(res.aov2)
m
help("aov")
summary(res.aov2)
data
source("floracio.R")
# set your working directory
setwd("/home/josep/Documents/biopob/gen")
source("floracio.R")
regressioLineal <- function(xlab, ylab, x, y) {
plot(x, y, xlab = xlab, ylab = ylab, cex.lab = 1.3)
lm1 <- lm(y ~ x, na.action = na.omit)
print(summary(lm1))
lmLegend(summary(lm1), withIntercept = TRUE)
abline(lm1)
}
regressioQuadratica <- function(xlab, ylab, x, y) {
lm2 <- lm(y ~ x + I(x^2), na.action = na.omit)
print(summary(lm2))
newdat = data.frame(x = seq(min(x, na.rm = TRUE), max(x, na.rm = TRUE)))
newdat$pred = predict(lm2, newdata = newdat)
plot(x=x, y=y, pch = 16, xlab = xlab, ylab = ylab, cex.lab = 1.3)
with(newdat, lines(x = x, y = pred))
lmLegend(summary(lm2))
}
data
colnames(data)
pdf("regressions_temperatura_vs_temps.pdf")
for (colname in colnames(data[,15:20])) {
regressioLineal("Any", colname, data$Any, data[[colname]])
regressioQuadratica("Any", colname, data$Any, data[[colname]])
}
dev.off()
pdf("regressions_temperatura_vs_temps.pdf")
# cada mes per separat
for (colname in colnames(data[,15:20])) {
regressioLineal("Any", colname, data$Any, data[[colname]])
regressioQuadratica("Any", colname, data$Any, data[[colname]])
}
mitjanaTempAnual <- (data$temp_gen + data$temp_feb + data$temp_mar + data$temp_abr + data$temp_mai + data$temp_jun) / 6
regressioLineal("Any", "Temperatura mitjana anual", data$Any, mitjanaTempAnual)
regressioQuadratica("Any", "Temperatura mitjana anual", data$Any, mitjanaTempAnual)
dev.off()
colnames(data)
pdf("regressions_precipitacio_vs_temps.pdf")
# cada mes per separat
for (colname in colnames(data[,21:26])) {
regressioLineal("Any", colname, data$Any, data[[colname]])
regressioQuadratica("Any", colname, data$Any, data[[colname]])
}
# precipitacio acumulada anual
precAnual <- data$prec_gen + data$prec_feb + data$prec_mar + data$prec_abr + data$prec_mai + data$prec_jun
regressioLineal("Any", "Precipitació mitjana anual", data$Any, precAnual)
regressioQuadratica("Any", "Precipitació mitjana anual", data$Any, precAnual)
dev.off()
pdf("regressions_precipitacio_vs_temps.pdf")
# cada mes per separat
for (colname in colnames(data[,21:26])) {
regressioLineal("Any", colname, data$Any, data[[colname]])
regressioQuadratica("Any", colname, data$Any, data[[colname]])
}
# precipitacio acumulada anual
precAnual <- data$prec_gen + data$prec_feb + data$prec_mar + data$prec_abr + data$prec_mai + data$prec_jun
regressioLineal("Any", "Precipitació anual acumulada", data$Any, precAnual)
regressioQuadratica("Any", "Precipitació anual acumulada", data$Any, precAnual)
dev.off()
